{"version":3,"sources":["components/Navbar/Navbar.js","components/MovieCard/MovieCard.js","utils/constants.js","data/movies.js","components/MovieGrid/MovieGrid.js","components/Header/Header.js","pages/MovieDetail/MovieDetail.js","pages/search/Search.js","App.js","index.js"],"names":["Navbar","isModalOpen","setIsModalOpen","useState","query","setQuery","navigate","useNavigate","_jsxs","className","children","_jsx","onClick","handleLogoClick","style","cursor","onSubmit","e","preventDefault","q","trim","encodeURIComponent","type","placeholder","value","onChange","target","FontAwesomeIcon","icon","faClock","map","genre","handleTopImdbClick","window","open","required","MovieCard","_ref","movie","handleClick","movieSlug","link","slug","replace","title","toLowerCase","yearMatch","match","year","createMovieSlug","src","poster","alt","loading","country","genres","index","API_URL","transformMovie","_movie$releaseYear","_movie$releaseYear$to","_movie$release_year","_movie$release_year$t","id","releaseYear","toString","call","release_year","subtitles","downloads","total_downloads","totalSubtitles","total_subtitles","subtitleCount","transformSubtitle","subtitle","language","caption","releaseInfo","release_info","hearingImpaired","hearing_impaired","rating","releaseType","release_type","uploaderDisplayname","uploader_displayname","uploadDate","upload_date","MovieGrid","movies","setMovies","setLoading","useEffect","async","data","response","fetch","json","results","error","console","fetchMovies","loadMovies","Header","_Fragment","scrollToBackground","banner","document","querySelector","scrollIntoView","behavior","scrollToMovieGrid","movieGrid","handlePartnerClick","href","MovieDetail","useParams","movieData","setMovieData","setError","getMovieDetail","_data$movie$release_y","_data$movie$release_y2","_data$movie$source_da","_data$movie$source_da2","_data$movie$source_da3","_data$movie$source_da4","source_data","votes","imdbLink","mediaType","media_type","fetchMovieDetail","err","length","rel","charAt","toUpperCase","slice","subtitleId","tokenResponse","tokenData","status","download_token","downloadResponse","ok","Error","blob","url","URL","createObjectURL","createElement","download","file_name","body","appendChild","click","removeChild","revokeObjectURL","alert","handleDownload","Search","params","useSearchParams","get","setResults","alive","searchMovies","run","App","Routes","Route","path","element","container","getElementById","createRoot","render","BrowserRouter"],"mappings":"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","file":"static/js/main.39d0d7ff.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Navbar.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [query, setQuery] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const genres = [\r\n    'Action', 'Drama', 'Comedy', 'Horror', 'Romance', \r\n    'Thriller', 'Sci-Fi', 'Fantasy', 'Adventure', \r\n    'Animation', 'Crime', 'Mystery', 'Documentary'\r\n  ];\r\n\r\n  const handleLogoClick = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const handleTopImdbClick = () => {\r\n    window.open('https://www.imdb.com/chart/top/', '_blank');\r\n  };\r\n\r\n  const handleSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    const q = query.trim();\r\n    if (!q) return;\r\n    navigate(`/search?q=${encodeURIComponent(q)}`);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"logo\" onClick={handleLogoClick} style={{ cursor: 'pointer' }}>\r\n        <h1>Amicia</h1>\r\n      </div>\r\n      <form className=\"search-container\" onSubmit={handleSearchSubmit}>\r\n        <input \r\n          type=\"text\" \r\n          className=\"search-input\" \r\n          placeholder=\"Search Your Favorite Subtitles\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n        />\r\n      </form>\r\n      <div className=\"nav-buttons\">\r\n        <button className=\"nav-button\">\r\n          <FontAwesomeIcon icon={faClock} className=\"nav-icon\" /> Latest\r\n        </button>\r\n        <div className=\"dropdown\">\r\n          <button className=\"nav-button dropdown-toggle\">Genre</button>\r\n          <div className=\"dropdown-content\">\r\n            {genres.map((genre) => (\r\n              <button key={genre} className=\"dropdown-item\">{genre}</button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <button className=\"nav-button\" onClick={handleTopImdbClick}>\r\n          Top IMDb\r\n        </button>\r\n        <button className=\"nav-button\" onClick={() => setIsModalOpen(true)}>\r\n          Contact Us\r\n        </button>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <button className=\"modal-close\" onClick={() => setIsModalOpen(false)}>×</button>\r\n            <h2>Contact Us</h2>\r\n            <form className=\"contact-form\">\r\n              <input type=\"text\" placeholder=\"Name\" required />\r\n              <input type=\"email\" placeholder=\"Email\" required />\r\n              <textarea placeholder=\"Message\" required></textarea>\r\n              <button type=\"submit\">Send Message</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './MovieCard.css';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const createMovieSlug = (movie) => {\r\n    // If movie has a link field, extract just the movie identifier\r\n    if (movie.link) {\r\n      let slug = movie.link;\r\n      // Remove any leading slashes and path prefixes\r\n      slug = slug.replace(/^\\/+/, ''); // Remove leading slashes\r\n      slug = slug.replace(/^(series|movie|subtitles)\\/+/, ''); // Remove path prefixes\r\n      return slug;\r\n    }\r\n    \r\n    // Fallback: create from title and year\r\n    let slug = movie.title\r\n      .toLowerCase()\r\n      .replace(/\\([^)]*\\)/g, '') // Remove anything in parentheses\r\n      .replace(/[^\\w\\s-]/g, '') // Remove special characters\r\n      .replace(/\\s+/g, '-') // Replace spaces with hyphens\r\n      .replace(/--+/g, '-') // Replace multiple hyphens\r\n      .replace(/^-+|-+$/g, '') // Remove leading/trailing hyphens\r\n      .trim();\r\n    \r\n    // Add year from title if it contains year in parentheses\r\n    const yearMatch = movie.title.match(/\\((\\d{4})\\)/);\r\n    if (yearMatch) {\r\n      slug += `-${yearMatch[1]}`;\r\n    } else if (movie.year) {\r\n      slug += `-${movie.year}`;\r\n    }\r\n    \r\n    return slug;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const movieSlug = createMovieSlug(movie);\r\n    navigate(`/movie/${movieSlug}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie-card\" onClick={handleClick}>\r\n      <div className=\"movie-poster\">\r\n        <img src={movie.poster} alt={movie.title} loading=\"lazy\" />\r\n        <div className=\"movie-overlay\">\r\n          <h2 className=\"movie-title\">{movie.title}</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"movie-info\">\r\n        <div className=\"movie-meta\">\r\n          {movie.year && <span>{movie.year}</span>}\r\n          {movie.year && movie.country && <span>•</span>}\r\n          {movie.country && <span>{movie.country}</span>}\r\n        </div>\r\n        <div className=\"movie-genres\">\r\n          {movie.genres && movie.genres.map((genre, index) => (\r\n            <span key={index} className=\"genre-tag\">{genre}</span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;","export const API_URL = 'http://127.0.0.1:5000';\r\nexport const APP_NAME = 'My React Website';\r\nexport const DEFAULT_BACKGROUND_COLOR = '#f0f0f0';","import { API_URL } from '../utils/constants';\r\n\r\n// Normalisasi data movie untuk UI\r\nconst transformMovie = (movie) => ({\r\n  id: movie.id,\r\n  title: movie.title,\r\n  year: movie.releaseYear?.toString?.() || movie.release_year?.toString?.() || '',\r\n  poster: movie.poster,\r\n  subtitles: movie.subtitles,\r\n  downloads: movie.total_downloads,\r\n  totalSubtitles: movie.total_subtitles || movie.subtitleCount,\r\n  link: movie.link,\r\n  genres: movie.genres || [],\r\n  country: movie.country || ''\r\n});\r\n\r\n// Transform subtitle data\r\nconst transformSubtitle = (subtitle) => ({\r\n  id: subtitle.id,\r\n  language: subtitle.language,\r\n  caption: \"Unknown\", // Always set to \"Unknown\"\r\n  releaseInfo: subtitle.release_info || \"Unknown\",\r\n  hearingImpaired: subtitle.hearing_impaired,\r\n  rating: subtitle.rating || \"unrated\",\r\n  releaseType: subtitle.release_type || \"Other\",\r\n  uploaderDisplayname: subtitle.uploader_displayname || \"Unknown\",\r\n  uploadDate: subtitle.upload_date,\r\n  link: subtitle.link\r\n});\r\n\r\n// Helper function to convert movie title to URL slug\r\nconst movieTitleToSlug = (title) => {\r\n  return title\r\n    .toLowerCase()\r\n    .replace(/\\(/g, '') // Remove opening parenthesis\r\n    .replace(/\\)/g, '') // Remove closing parenthesis\r\n    .replace(/[^\\w\\s-]/g, '') // Remove special characters except spaces and hyphens\r\n    .replace(/\\s+/g, '-') // Replace spaces with hyphens\r\n    .replace(/--+/g, '-') // Replace multiple hyphens with single hyphen\r\n    .replace(/^-+|-+$/g, '') // Remove leading/trailing hyphens\r\n    .trim();\r\n};\r\n\r\n// Ambil daftar movie (home)\r\nconst fetchMovies = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/home`);\r\n    const data = await response.json();\r\n    const items = data.movies || data.results || [];\r\n    return items.map(transformMovie);\r\n  } catch (error) {\r\n    console.error('Error fetching movies:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Search movie ke API Flask\r\nconst searchMovies = async (query) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/search?q=${encodeURIComponent(query)}`);\r\n    const data = await response.json();\r\n    const items = data.movies || data.results || [];\r\n    return items.map(transformMovie);\r\n  } catch (error) {\r\n    console.error('Error searching movies:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Fetch movie detail with subtitles\r\nconst fetchMovieDetail = async (movieSlug) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/subtitles/${movieSlug}`);\r\n    const data = await response.json();\r\n    \r\n    if (data.movie) {\r\n      const transformedMovie = {\r\n        id: data.movie.id,\r\n        title: data.movie.title,\r\n        year: data.movie.release_year?.toString?.() || '',\r\n        poster: data.movie.poster,\r\n        genres: data.movie.source_data?.genres || [],\r\n        rating: data.movie.source_data?.rating || 0,\r\n        votes: data.movie.source_data?.votes || 0,\r\n        imdbLink: data.movie.source_data?.link || '',\r\n        type: data.movie.type || 'movie',\r\n        mediaType: data.media_type || 'movie'\r\n      };\r\n\r\n      const transformedSubtitles = (data.subtitles || []).map(transformSubtitle);\r\n\r\n      return {\r\n        movie: transformedMovie,\r\n        subtitles: transformedSubtitles\r\n      };\r\n    }\r\n    \r\n    return null;\r\n  } catch (error) {\r\n    console.error('Error fetching movie detail:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { fetchMovies, searchMovies, fetchMovieDetail, movieTitleToSlug };","import React, { useState, useEffect } from 'react';\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport { fetchMovies } from '../../data/movies';\r\nimport './MovieGrid.css';\r\n\r\nconst MovieGrid = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadMovies = async () => {\r\n      try {\r\n        const data = await fetchMovies();\r\n        setMovies(data);\r\n      } catch (error) {\r\n        console.error('Error loading movies:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadMovies();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading movies...</div>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"movies-section\">\r\n      <h2 className=\"movies-title\">Popular</h2>\r\n      <div className=\"movies-grid\">\r\n        {movies.map((movie) => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MovieGrid;","import React from 'react';\r\nimport './Header.css';\r\nimport MovieGrid from '../MovieGrid/MovieGrid';\r\n\r\nconst Header = () => {\r\n  const scrollToBackground = () => {\r\n    const banner = document.querySelector('.banner-container');\r\n    if (banner) {\r\n      banner.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const scrollToMovieGrid = () => {\r\n    const movieGrid = document.querySelector('.movies-section');\r\n    if (movieGrid) {\r\n      movieGrid.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const handlePartnerClick = () => {\r\n    window.open('https://ldarchive.site', '_blank');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <h1></h1>\r\n          <h2 className=\"subtitle\">Temukan Subtitle terbaik untuk Film dan Series favoritmu.</h2>\r\n          <ul className=\"features-list\">\r\n            <li>Easily find and download subtitles for your favorite movies and series.</li>\r\n            <li>Compatible with multiple movie versions.</li>\r\n            <li>Download your subtitle to your personal Drive.</li>\r\n            <li>Get subtitle recommendations based on the movie genres you watch.</li>\r\n            \r\n          </ul>\r\n          <div className=\"button-group\">\r\n            <button className=\"join-button\" onClick={scrollToBackground}>How to Apply Subtitle</button>\r\n            <button className=\"login-button\" onClick={scrollToMovieGrid}>Discover</button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <section className=\"game-section\">\r\n        <h2 className=\"game-title\"></h2>\r\n        <p className=\"game-subtitle\">Our Partner</p>\r\n        <button className=\"play-button\" onClick={handlePartnerClick}>\r\n          LDarchive.site\r\n        </button>\r\n      </section>\r\n      <MovieGrid />\r\n      <div className=\"banner-container\">\r\n        <img \r\n          src=\"https://cdn.discordapp.com/attachments/1397420970767024168/1403292192671272960/1754639327-picsaygh.jpg?ex=68970532&is=6895b3b2&hm=8b5fb21e6c683adda9ee5bba464ae78971af7e22a11f284e435fc3e215752a97&\"\r\n          alt=\"Banner\" \r\n          className=\"banner-image\" \r\n        />\r\n      </div>\r\n      <footer className=\"footer\">\r\n        <div className=\"footer-container\">\r\n          <div className=\"social\">\r\n            <h3>Social</h3>\r\n            <ul>\r\n              <li><a href=\"#\">Discord</a></li>\r\n              <li><a href=\"#\">Facebook</a></li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"information\">\r\n            <h3>Information</h3>\r\n            <ul>\r\n              <li><a href=\"#\">Contact Us</a></li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"howlongtobeat\">\r\n            <h3>AMICia</h3>\r\n            <p>© 2025 Amicia Web Subtitles. All rights reserved. No part of this website or its content, including subtitles, may be reproduced, distributed, or transmitted in any form without prior written permission from the copyright owner.</p>\r\n            <p>Amicia Web Subtitles® is a registered mark and may only be used with explicit written consent. <a href=\"#\"></a> | <a href=\"#\"></a></p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport { fetchMovieDetail } from '../../data/movies';\r\nimport { API_URL } from '../../utils/constants';\r\nimport './MovieDetail.css';\r\n\r\nconst MovieDetail = () => {\r\n  const { movieSlug } = useParams();\r\n  const [movieData, setMovieData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getMovieDetail = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const data = await fetchMovieDetail(movieSlug);\r\n        if (data) {\r\n          setMovieData(data);\r\n        } else {\r\n          setError('Movie not found');\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to load movie details');\r\n        console.error('Error fetching movie detail:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (movieSlug) {\r\n      getMovieDetail();\r\n    }\r\n  }, [movieSlug]);\r\n\r\n  const handleDownload = async (language, subtitleId) => {\r\n    try {\r\n      // Step 1: Get the download token\r\n      const tokenResponse = await fetch(`${API_URL}/subtitle/${movieSlug}/${language}/${subtitleId}`);\r\n      const tokenData = await tokenResponse.json();\r\n      \r\n      if (tokenData.status === 'available' && tokenData.download_token) {\r\n        // Step 2: Use the token to download the subtitle\r\n        const downloadResponse = await fetch(`${API_URL}/subtitle/download/${tokenData.download_token}`);\r\n        \r\n        // Check if the response is ok\r\n        if (!downloadResponse.ok) {\r\n          throw new Error('Download failed');\r\n        }\r\n\r\n        // Get the blob from the response\r\n        const blob = await downloadResponse.blob();\r\n        \r\n        // Create a URL for the blob\r\n        const url = window.URL.createObjectURL(blob);\r\n        \r\n        // Create and trigger download link\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = tokenData.file_name || `subtitle-${subtitleId}.srt`;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        \r\n        // Cleanup\r\n        document.body.removeChild(link);\r\n        window.URL.revokeObjectURL(url);\r\n      } else {\r\n        alert('Subtitle tidak tersedia untuk didownload');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error downloading subtitle:', error);\r\n      alert('Gagal mendownload subtitle');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"detail-page\">\r\n        <Navbar />\r\n        <div className=\"detail-container\">\r\n          <div className=\"loading-message\">Loading movie details...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !movieData) {\r\n    return (\r\n      <div className=\"detail-page\">\r\n        <Navbar />\r\n        <div className=\"detail-container\">\r\n          <div className=\"error-message\">\r\n            <h2>{error || 'Movie not found'}</h2>\r\n            <p>The movie you're looking for could not be found.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { movie, subtitles } = movieData;\r\n\r\n  return (\r\n    <div className=\"detail-page\">\r\n      <Navbar />\r\n      <div className=\"detail-container\">\r\n        <div className=\"detail-content-wrap\">\r\n          <div className=\"detail-info-section\">\r\n            <div className=\"detail-poster-container\">\r\n              <img\r\n                src={movie.poster}\r\n                alt={movie.title}\r\n                className=\"detail-poster-image\"\r\n              />\r\n            </div>\r\n            <div className=\"detail-content\">\r\n              <h1 className=\"detail-title\">{movie.title}</h1>\r\n              <div className=\"detail-meta\">\r\n                <span className=\"detail-year\">{movie.year}</span>\r\n                {movie.rating > 0 && (\r\n                  <>\r\n                    <span className=\"detail-separator\">•</span>\r\n                    <span className=\"detail-rating\">⭐ {movie.rating}</span>\r\n                  </>\r\n                )}\r\n                {movie.votes > 0 && (\r\n                  <span className=\"detail-votes\">({movie.votes} votes)</span>\r\n                )}\r\n              </div>\r\n              {movie.genres && movie.genres.length > 0 && (\r\n                <div className=\"detail-genres\">\r\n                  {movie.genres.map((genre, index) => (\r\n                    <span key={index} className=\"genre-tag\">{genre}</span>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              {movie.imdbLink && (\r\n                <div className=\"detail-links\">\r\n                  <a \r\n                    href={movie.imdbLink} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"imdb-link\"\r\n                  >\r\n                    View on IMDb\r\n                  </a>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Subtitle Table Section */}\r\n          <div className=\"detail-subtitle-section\">\r\n            <h2 className=\"detail-subtitle-header\">\r\n              Available Subtitles ({subtitles.length})\r\n            </h2>\r\n            \r\n            {subtitles.length === 0 ? (\r\n              <div className=\"no-subtitles\">\r\n                <p>No subtitles available for this movie.</p>\r\n              </div>\r\n            ) : (\r\n              <table className=\"detail-subtitle-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"detail-table-header\">Language</th>\r\n                    <th className=\"detail-table-header\">Release Info</th>\r\n                    <th className=\"detail-table-header\">H.I.</th>\r\n                    <th className=\"detail-table-header\">Rating</th>\r\n                    <th className=\"detail-table-header\">Uploader</th>\r\n                    <th className=\"detail-table-header\">Caption</th>\r\n                    <th className=\"detail-table-header\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {subtitles.map((subtitle, index) => (\r\n                    <tr \r\n                      key={`${subtitle.id}-${index}`}\r\n                      className=\"detail-table-row\"\r\n                    >\r\n                      <td className=\"detail-table-cell\">\r\n                        <span className=\"language-tag\">\r\n                          {subtitle.language === 'bengali' ? '🇧🇩' : '🌐'}\r\n                        </span>\r\n                        {' '}\r\n                        {subtitle.language.charAt(0).toUpperCase() + subtitle.language.slice(1)}\r\n                      </td>\r\n                      <td className=\"detail-table-cell\">\r\n                        {subtitle.releaseInfo}\r\n                      </td>\r\n                      <td className=\"detail-table-cell\">\r\n                        {subtitle.hearingImpaired ? 'Yes' : 'No'}\r\n                      </td>\r\n                      <td className=\"detail-table-cell\">\r\n                        {subtitle.rating}\r\n                      </td>\r\n                      <td className=\"detail-table-cell\">\r\n                        {subtitle.uploaderDisplayname}\r\n                      </td>\r\n                      <td className=\"detail-table-cell\">\r\n                        Unknown\r\n                      </td>\r\n                      <td className=\"detail-table-cell\">\r\n                        <button \r\n                          className=\"download-button\"\r\n                          onClick={() => handleDownload(subtitle.language, subtitle.id)}\r\n                        >\r\n                          Download\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;","import React, { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport MovieCard from '../../components/MovieCard/MovieCard';\r\nimport { searchMovies } from '../../data/movies';\r\nimport './Search.css';\r\n\r\nconst Search = () => {\r\n  const [params] = useSearchParams();\r\n  const q = params.get('q') || '';\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let alive = true;\r\n    const run = async () => {\r\n      if (!q.trim()) {\r\n        setResults([]);\r\n        return;\r\n      }\r\n      setLoading(true);\r\n      try {\r\n        const data = await searchMovies(q);\r\n        if (alive) setResults(data);\r\n      } finally {\r\n        if (alive) setLoading(false);\r\n      }\r\n    };\r\n    run();\r\n    return () => { alive = false; };\r\n  }, [q]);\r\n\r\n  return (\r\n    <div className=\"search-page\">\r\n      <Navbar />\r\n      <div className=\"search-container\">\r\n        <h2 className=\"search-title\">Search results for \"{q}\"</h2>\r\n        \r\n        {loading && (\r\n          <div className=\"search-loading\">\r\n            🔍 Searching for movies...\r\n          </div>\r\n        )}\r\n        \r\n        {!loading && !results.length && q.trim() && (\r\n          <div className=\"search-no-results\">\r\n            😔 No movies found for \"{q}\". Try a different search term.\r\n          </div>\r\n        )}\r\n        \r\n        {!loading && !!results.length && (\r\n          <>\r\n            <div className=\"search-results-count\">\r\n              Found {results.length} movie{results.length !== 1 ? 's' : ''}\r\n            </div>\r\n            <div className=\"movies-grid\">\r\n              {results.map((movie) => (\r\n                <MovieCard key={movie.id} movie={movie} />\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Header from './components/Header/Header';\r\nimport MovieDetail from './pages/MovieDetail/MovieDetail';\r\nimport Search from './pages/search/Search';\r\nimport './styles/global.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Routes>\r\n        <Route path=\"/\" element={\r\n          <>\r\n            <Navbar />\r\n            <Header />\r\n          </>\r\n        } />\r\n        <Route path=\"/movie/:movieSlug\" element={<MovieDetail />} />\r\n        <Route path=\"/search\" element={<Search />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './styles/global.css';\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container);\r\n\r\nroot.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n);"],"sourceRoot":""}